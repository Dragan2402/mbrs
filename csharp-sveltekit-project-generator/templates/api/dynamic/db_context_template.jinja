using Microsoft.EntityFrameworkCore;
using System;
using {{ project_name }}.Domain;
using {{ project_name }}.Infrastructure.Extensions;

namespace {{ project_name }}.Data;

public class {{ context_name }}DbContext : DbContext
{
    public {{ context_name }}DbContext(DbContextOptions options) : base(options)
    {
    }

    {% for class in classes %}
    public DbSet<{{ class.name }}> {{ class.plural_name }} { get; set; }
    {% endfor %}

    protected void ConfigureModel(ModelBuilder builder)
    {
    }

    protected override void OnModelCreating(ModelBuilder builder)
    {
        base.OnModelCreating(builder);
    }

    public override async Task<int> SaveChangesAsync(CancellationToken cancellationToken = default)
    {
        ChangeTracker.SetAuditProperties();
        return await base.SaveChangesAsync(cancellationToken);
    }

    public override async Task<int> SaveChangesAsync(bool acceptAllChangesOnSuccess, CancellationToken cancellationToken = default)
    {
        ChangeTracker.SetAuditProperties();
        return await base.SaveChangesAsync(acceptAllChangesOnSuccess, cancellationToken);
    }

    public override int SaveChanges()
    {
        ChangeTracker.SetAuditProperties();
        return base.SaveChanges();
    }

    public override int SaveChanges(bool acceptAllChangesOnSuccess)
    {
        ChangeTracker.SetAuditProperties();
        return base.SaveChanges(acceptAllChangesOnSuccess);
    }
}
